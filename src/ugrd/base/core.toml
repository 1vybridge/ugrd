file_owner = "portage"
build_dir = "/tmp/initramfs"
_build_log_level = 10
out_dir = "/tmp/initramfs_out"
clean = true
hostonly = true
validate = true
library_paths = [ "/lib64" ]
old_count = 1

binaries = [ "/bin/bash" ]

[nodes.console]
mode = 0o644
major = 5
minor = 1

[imports.config_processing]
"ugrd.base.core" = [ "_process_build_logging",
		     "_process_binaries_multi",
		     "_process_dependencies_multi",
		     "_process_opt_dependencies_multi",
		     "_process_gz_dependencies_multi",
		     "_process_copies_multi",
		     "_process_symlinks_multi",
		     "_process_file_owner",
		     "_process_nodes_multi",
		     "_process_paths_multi",
		     "_process_masks_multi",
		     "_process_hostonly",
		     "_process_validate",
		   ]

[imports.build_pre]
"ugrd.base.core" = [ "clean_build_dir" ]

[imports.build_tasks]
"ugrd.base.core" = [ "generate_structure", "deploy_dependencies", "deploy_gz_dependencies", "deploy_copies", "deploy_nodes", "deploy_symlinks" ]

[imports.build_final]
"ugrd.base.core" = [ "check_usr" ]

[imports.init_pre]
"ugrd.base.core" = [ "configure_library_paths" ]

[custom_parameters]
hostonly = "bool"  # If true, the initramfs will be built specifically for the host building it
validate = "bool"  # If true, the configuration of the initramfs will be validated against the host
_file_owner_uid = "int"  # Add the _file_owner_uid property, used to store the uid of the file owner
_custom_init_file = "str"  # Add the _custom_init_file propety, used to set where the custom init file is located
build_dir = "Path"  # The directory where the initramfs is built
build_logging = "bool" # If true, additional build information will be logged to the console
_build_log_level = "int"  # The level of logging to use for the build log, set to 10 by default and incremeted by if build_log is true (min 20)
symlinks = "dict"  # Symlinks dict, defines the symlinks to be made in the initramfs
dependencies = "NoDupFlatList"  # Dependencies, used to define the dependencies of the initramfs
opt_dependencies = "NoDupFlatList"  # Optional dependencies, which will be included if they are found
gz_dependencies = "NoDupFlatList"  # GZipped dependencies property, used to define the gzipped dependencies (will be extracted)
library_paths = "NoDupFlatList"  # library_paths property, used to define the library paths to add to LD_LIBRARY_PATH
binaries = "NoDupFlatList"  # Binaries which should be included in the intiramfs, dependencies resolved with lddtree
copies = "dict"  # Copies dict, defines the files to be copied to the initramfs
nodes = "dict"  # Nodes dict, defines the device nodes to be created
paths = "NoDupFlatList"  # Paths to be created in the initramfs
masks = "dict"  # Imports to be masked in the initramfs
out_dir = "Path"  # The directory where the initramfs is packed/output. If no packer is used, this is the final output directory.
old_count = "int"  # The number of times to cycle old files before deleting
clean = "bool"  # Add the clean property, used to define if the mounts should be cleaned up after boot
file_owner = "str"  # Add the file_owner property, used to define who should own the copied initramfs files

