binaries = [
  "lsblk",
  "blkid",
  "mount",
  "mkdir",
  "sleep",
  "umount",
]

mount_wait = false
autodetect_root = true

[imports.config_processing]
"ugrd.fs.mounts" = [ "_process_mounts_multi" ]

[imports.build_pre]
"ugrd.fs.mounts" = [ "autodetect_root" ]

[imports.build_final]
"ugrd.fs.mounts" = [ "generate_fstab" ]

[imports.init_pre]
"ugrd.fs.mounts" = [ "mount_base" ]

[imports.init_early]
"ugrd.fs.mounts" = [ "mount_fstab" ]

[imports.init_main]
"ugrd.fs.mounts" = [ "remake_mountpoints" ]

[imports.init_clean]
"ugrd.fs.mounts" = [ "clean_mounts" ]

[imports.init_premount]
"ugrd.fs.mounts" = [ "export_mount_info" ]

[imports.init_mount]
"ugrd.fs.mounts" = [ "mount_root" ]

[imports.functions]
"ugrd.fs.mounts" = [ "clean_mounts", "_mount_fail" ]

[custom_parameters]
mounts = "dict"  # Add the mounts property, used to define the mounts to be made in the fstab
mount_wait = "bool"  # Add the mount_wait property, if defined, user input will be required before attempting to mount entries
mount_timeout = "int"  # Add the mount_timeout property, used to define the timeout for mount_wait
mount_cmd = "str"  # The mount command called by mount_root, can be overridden
autodetect_root = "bool"  # Add the autodetect_root property, if defined, the root mount will be autodetected


# Define the base of the root mount
[mounts.root]
skip_unmount = true
destination = "/mnt/root"
options = ['ro']

# Define the default mounts
# The format is mounts.mount where the mount is the name of the mount
# Alternatively, the destination option can be used to define the mount point

[mounts.proc]
type = "proc"
source = "proc"
options = ['nodev', 'noexec' ,'nosuid']
base_mount = true

[mounts.sys]
type = "sysfs"
source = "sysfs"
options = ['nodev', 'noexec' ,'nosuid']
base_mount = true

[mounts.dev]
type = "devtmpfs"
source = "devtmpfs"
options = ['nosuid', 'mode=0755']
base_mount = true
skip_unmount = true
