# This module generates an initramfs that uses a yubikey to decrypt a luks keyfile.
# The sc_public_key must be specified.
# Pull kmod aliases for reading nvme, fat formatted usb storage.
# Wait 3seconds for storage to settle after modules are loaded.
# GPG encrypted keyfiles are on /boot, protected with the yubikey.


modules = [
  "ugrd.base.base",
  "ugrd.base.kmod",
  "ugrd.base.kmod_usb",
  "ugrd.base.kmod_nvme",
  "ugrd.base.kmod_fat",
  "ugrd.crypto.cryptsetup",
  "ugrd.base.btrfs",
  "ugrd.base.console",
  "ugrd.crypto.gpg",
  "ugrd.crypto.smartcard"
]

out_dir = "/usr/src/initramfs"
sc_public_key = "/home/larry/yubikey_public.asc"

# Wait a few seconds for storage to settle after modules are loaded
mount_wait = true
mount_timeout = 3

# This is necessary if the keyfile is on another device.
# The keyfile could be added as a dependency. if it's on the same device.
[mounts.boot]
type = "vfat"

  [mounts.boot.source]
  uuid = "4886-A631"

# The label of the volume under the LUKS partition, a UUID could be used
[root_mount]
label = "rootfs"

# Information about the LUKS volume
[cryptsetup.root]
uuid = "eee3611d-9b36-42b3-8ed2-62173064c76a"
key_type = "gpg"
key_file = "/boot/rootfs.luks.gpg"
