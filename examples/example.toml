# This config will decrypt the LUKS volume with uuid "fdf442da-0574-4531-98c7-55227a041f1d", mapping it to "/dev/mapper/root"
# It will attempt to mount the btrfs volume with label "rootfs" to /target_rootfs
# It will pull all current kernel modules from lspci -k results
# It will try to process the cmdline and mount the rootfs based on the root= parameter

modules = [
#  "ugrd.crypto.cryptsetup", # This is included by the gpg module
#  "ugrd.crypto.gpg", # This is included by the smartcard module
#  "ugrd.crypto.smartcard",   
]

# Mask the parse_cmdline function to prevent it from running
#mask.init_pre = 'parse_cmdline'

# By default, all kmod categories are ignored. This can be disabled by category
#kmod_ignore_video = false
#kmod_ignore_sound = false
#kmod_ignore_network = false

# The initramfs will be built in /tmp/initramfs if "build_dir" is not specified not specified
#out_dir = "/usr/src/initramfs"

# Optionally supply a kernel version, uses the current kernel version if not specified
#kernel_version = "6.1.53-gentoo-dist"
# lspci based detection is usually helpful
kmod_autodetect_lspci = true
# lsmod detection can be helpful, but can bring in unnecessary modules
#kmod_autodetect_lsmod = true

# By default, ugrd will keep retrying to mount base mounts and the rootfs, unless enter is pressed
# The default timeout between attempts is 1s, and the default number of retries is infinite
#mount_timeout = 0.25  # Wait 0.25 seconds between mount attempts, instead of 1s.
#mount_retries = 5  # Retry mounting the rootfs 5 times, if unset, it will retry indefinitely

# The location of the gpg public key, if using a smartcard and gpg encrypted keyfile
#sc_public_key = "/etc/ugrd/pubkey.gpg"

#auto_mounts = ['/boot']  # Automatically create mount config for /boot on the host

# Optionally specify the root mountpoint information manually
#[mounts.root]
# The label of the root filesystem, a uuid or partuuid could be used instead
#label = "rootfs"

# This is necessary if the keyfile is on another device.
# The keyfile could be added as a dependency. if it's on the same device.
#[mounts.boot]
#type = "vfat"
#uuid = "4886-A631"


# If the root is a LUKS volume, specify the LUKS volume information
#[cryptsetup.root]
# The UUID of the encrypted volume, mounted at /dev/mapper/root
#uuid = "fdf442da-0574-4531-98c7-55227a041f1d"
# If a GPG encrypted key file is used, the key_type must be set to gpg.
#key_type = "gpg"
# The key file must either be included as a dependency, or it must be under an external mountpoint.
#key_file = "/boot/rootfs.luks.gpg"
